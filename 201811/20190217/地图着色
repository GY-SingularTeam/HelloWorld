
import java.util.Arrays;
import java.util.Scanner;


/*
 * 地图上相邻的国家不能使用同一种颜色着色，那么你有办法给地图着色吗？
第一行输入：国家数，颜色数
第二行输入：国家相邻数以及相邻国家
输出：所有着色方案
例：
输入
7 	3
12
1	2
1	3
1	4
2	3
2	5
3	4
3	5
4	5
5	6
5	7
6	7
4 	7
输出
1	2	3	2	1	2	3
1	3	2	3	1	3	2
2	1	3	1	2	1	3
2	3	1	3	2	3	1
3	1	2	1	3	1	2
3	2	1	2	3	2	1
 * */
public class Main {
	public static int [][] map;
	//颜色数
	public static int color;
	//国家数
	public static int n;
	//着色方案
	public static int []x;
	public static void main(String[] args) {
		Scanner sr = new Scanner(System.in);
		
		n = sr.nextInt();
		color = sr.nextInt();
		int m = sr.nextInt();
		
		map = new int[n][n];
		x = new int[n];
		for(int i = 0; i < n; i++){
			Arrays.fill(map[i], 0);
		}
		for(int i = 0; i < m; i++){
			int x = sr.nextInt() - 1;
			int y = sr.nextInt() - 1;
			map[x][y] = map[y][x] = 1;
		}
		
		/*for(int i = 0; i < n; i++)
			System.out.println(Arrays.toString(map[i]));
		*/
		fun(0);
		
		sr.close();
	}
	//约束条件,有边，且和相邻国家的着色不相同
	public static boolean isTrue(int t){
		for(int i = 0; i < t; i++){
			if(map[t][i] == 1)
				//颜色是不是相同了
				if(x[i] == x[t])
					return false;
		}
		
		return true;
	}
	//搜索
	public static void fun(int t){
		if(t >= n){
			for(int i = 0; i < n; i++)
				System.out.print(x[i] + 1 + " ");
			System.out.println();
		}else{
			//着色
			for(int i = 0; i < color; i++){
				x[t] = i;
				if(isTrue(t) == true)
					fun(t + 1);
			}
		}
	}
}
