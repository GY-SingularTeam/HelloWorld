import java.util.Scanner;

public class Main {
	public static int min;
	public static int[][] map;
	public static boolean[][] bool;

	public static void main(String[] args) {
		Scanner sr = new Scanner(System.in);
		int m = sr.nextInt();
		int n = sr.nextInt();
		map = new int[n][m];
		bool = new boolean[n][m];
		for (int i = 0; i < map.length; i++)
			for (int j = 0; j < map[i].length; j++)
				map[i][j] = sr.nextInt();
		System.out.println(fun(map));
		sr.close();

	}

	private static int fun(int[][] map) {
		int sum = 0;
		for (int[] t1 : map)
			for (int t : t1)
				sum += t;
		if (sum % 2 == 1)
			return 0;
		sum /= 2;
		min = Integer.MAX_VALUE;
		bool[0][0] = true;
		bfs(0, 0, sum, 0);
		if (min == Integer.MAX_VALUE)
			return 0;
		else
			return min;
	}

	private static void bfs(int x, int y, int sum, int count) {
		if (sum == 0 && count < min)
			min = count;
		int[][] dir = new int[][] { { 0, 1 }, { 1, 0 }, { -1, 0 }, { 0, -1 } };
		for (int k = 0; k < 4; k++) {
			int dx = x + dir[k][0];
			int dy = y + dir[k][1];
			if (dx < 0 || dy < 0 || dx >= map.length || dy >= map[dx].length || bool[dx][dy])
				continue;
			int t = sum - map[x][y];
			if (t < 0)
				continue;
			bool[dx][dy] = true;
			bfs(dx, dy, t, count + 1);
			bool[dx][dy] = false;

		}

	}

}
